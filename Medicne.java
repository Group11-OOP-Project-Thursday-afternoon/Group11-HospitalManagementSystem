
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author A.TUAN
 */
public class Medicne extends javax.swing.JFrame {

    /**
     * Creates new form Medicne
     */
    Connection conn = null;
    DefaultTableModel tableModel = null;
    DBconnect db = new DBconnect();
    public Medicne() {
        initComponents();
        tableModel = (DefaultTableModel) table.getModel();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        search1 = new javax.swing.JTextField();
        date = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        pre = new javax.swing.JLabel();
        pre1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        search = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("MEDICINE DETAIL");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(410, 40, 340, 40);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "LicenseNo", "Price"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(50, 180, 452, 402);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("SEARCH");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(60, 110, 80, 20);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(140, 100, 350, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("PATIENT ID ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(570, 210, 100, 30);

        search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                search1KeyPressed(evt);
            }
        });
        jPanel1.add(search1);
        search1.setBounds(730, 210, 340, 30);

        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateKeyPressed(evt);
            }
        });
        jPanel1.add(date);
        date.setBounds(730, 290, 110, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("DATE");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(610, 300, 70, 14);

        pre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pre.setText("PRESCRIPTION");
        jPanel1.add(pre);
        pre.setBounds(550, 360, 110, 30);
        jPanel1.add(pre1);
        pre1.setBounds(730, 370, 330, 150);

        jButton9.setForeground(new java.awt.Color(0, 102, 255));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back (2).png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(10, 20, 49, 50);

        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medbackground_1.jpg"))); // NOI18N
        jPanel1.add(search);
        search.setBounds(0, 0, 1150, 610);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        String search1=jTextField1.getText();
        TableRowSorter<DefaultTableModel> tr=new TableRowSorter<DefaultTableModel>(tableModel);
        table.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search1));
    }//GEN-LAST:event_jTextField1KeyReleased

    private void search1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search1KeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            conn = db.getConnection();
            PreparedStatement pst = conn.prepareStatement("Select Date from "
                    + "diagnose where PatientID= ?");
            pst.setString(1,search1.getText());
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                date.addItem(convertStringToDate(rs.getDate("Date")));
            }

        } catch (Exception ex) {
            Logger.getLogger(Diagnose1.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Diagnose1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_search1KeyPressed

    private void dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            conn = db.getConnection();
            PreparedStatement pst = conn.prepareStatement("Select*from diagnose "
                    + "where PatientID=? and Date =?");
            pst.setString(1, search1.getText());
            pst.setDate(2, convertFromJAVADateToSQLDate(convert((String) date.getSelectedItem())));
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                
                pre1.setText(rs.getString("Prescription"));
            }
        } catch (Exception ex) {
            Logger.getLogger(Diagnose1.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Diagnose1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_dateKeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here
        PhamarLogin pha = new PhamarLogin();
        pha.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jButton9ActionPerformed
    private void showTable(){
         try {
            conn = db.getConnection();
            PreparedStatement pst = conn.prepareStatement("Select*from medicine");
            ResultSet rs = pst.executeQuery();
            tableModel.setRowCount(0);
            while(rs.next()){
                tableModel.addRow(new Object[]{
                   rs.getString("MedicineID"),rs.getString("Name"),rs.getString("LiesenceNo"),rs.getString("Price")
                });
                
            }
        } catch (Exception ex) {
            Logger.getLogger(DoctorActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medicne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medicne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medicne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medicne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medicne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> date;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel pre;
    private javax.swing.JTextField pre1;
    private javax.swing.JLabel search;
    private javax.swing.JTextField search1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
public Date convert(String s) throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MMM/yyyy", Locale.ENGLISH);

        String dateInString = s;
        Date date = formatter.parse(dateInString);
        return date;
    }
public static java.sql.Date convertFromJAVADateToSQLDate(
            java.util.Date javaDate) {
        java.sql.Date sqlDate = null;
        if (javaDate != null) {
            sqlDate = new java.sql.Date(javaDate.getTime());
        }
        return sqlDate;
    }
 public String convertStringToDate(Date indate) {
        String dateString = null;
        SimpleDateFormat sdfr = new SimpleDateFormat("dd/MMM/yyyy");
        try {
            dateString = sdfr.format(indate);
        } catch (Exception ex) {
            System.out.println(ex);
        }
        return dateString;
    }
}